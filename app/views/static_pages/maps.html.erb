  
<div class="jumbotron">
  <div class="container">
  <h1 align="center", style="margin-bottom: 40px; margin-top: 10px;">Mapas Temáticos</h1>
  <p align="center", style="margin-bottom: 40px;">Es una aplicación sencilla para generar mapas estadísticos utilizando los datos que puedas subir.</p>
  
  <div class="span4 offset4 text-center">
    <button class="btn1 btn-primary btn-lg", style="margin-top: 25px" onclick="myFunctionJS()" id="btnMyModal">Comenzar</button>
  </div>


<!-- Ventana modal 1 Configuración mapa -->
<div id="myModal1" class="modal" data-backdrop="static" data-keyboard="false">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h4 class="modal-title">Paso 1/3: Configuración del mapa</h4>
      </div>
      <div class="modal-body">
        
        <h4 class=>Tipo de mapa</h4>
          <form style="padding-left:30px; margin-bottom: 10px;" action="">
        <input type="radio" name="mapa_tipo" id = "rb_satellite" value="satellite" > Satélite<br>
        <input type="radio" name="mapa_tipo" id = "rb_hybrid"  value="hybrid" > Híbrido<br>
        <input type="radio" name="mapa_tipo" id = "rb_terrain" value="terrain" > Físico
      </form>

    <h4 class=>Búsqueda de localización</h4>
    <div class="input-group">
      <input type="text" class="form-control" placeholder="Introduzca país o ciudad" aria-describedby="basic-addon1" id="pais">
    </div>

      </div>
      <h1 id='notificador1' style='float:left;margin-left:20px;font-size:14px !important;display:none !important;color: red !important;'>notificacion</h1>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal" id="btnCloseModal">Cerrar</button>
        <button type="button" class="btn btn-primary" data-toggle= "modal" id="btnSiguienteModal1" data-target="#myModal2">Siguiente</button>
      </div>
    </div>
  </div>
</div>

<!-- Ventana modal 2 Configuración estadísticas -->
<div id="myModal2" class="modal" style="display:none" data-backdrop="static" data-keyboard="false">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" id="btnCloseModal2" aria-hidden="true">&times;</button>
        <h4 class="modal-title">Paso 2/3: Configuración de los gráficos</h4>
      </div>
      <div class="modal-body">

        <h4 class=>Título del gráfico</h4>
        <div class="input-group">
      <input type="text" class="form-control" placeholder="Introduzca el título del gráfico" aria-describedby="basic-addon1" id = "titulo_grafico">
    </div>
    <!--h3 class=>Nombre de las etiquetas</h4>
        <div class="input-group">
      <input type= "text" class="form-control" placeholder="Introduzca el nombre de las etiquetas" aria-describedby="basic-addon1">
    </div-->
    <h4 class=>Tipo de gŕafico</h4>
        <select class="form-control" id = "tipo_grafico">
          <!--option value="none">Elija una opción</option-->
        <option value="column">Gráfico de columnas</option>
        <option value="bar">Gáfico de barras</option>
        <option value="circular">Gráfico circular</option>
        <option value="anillos">Gráfico de anillos</option>
        <!--option value="burbujas">Gráfico de burbujas</option-->
        <!--option value="cajas">Gráfico de cajas</option-->
        <!--option value="compuesto">Gráfico compuesto</option-->
        <option value="histograma">Histograma</option>
    </select>
      <!--div>
        <h4 class=>Colores del gŕafico</h4>
        <div class = "colorContainer">
          <div class = "div-col-green"> </div>
          <input type="checkbox" id="greenchb" value="">
        </div>
        <div class = "invisible"></div>
        <div class = "colorContainer">
          <div class = "div-col-blue"> </div>
          <input type="checkbox" id="bluechb" value="">
        </div>
        <div class = "invisible"></div>
        <div class = "colorContainer">
          <div class = "div-col-red"> </div>
          <input type="checkbox" id="redchb" value="">
        </div>
        <div class = "invisible"></div>
        <div class = "colorContainer">
          <div class = "div-col-gray"> </div>
          <input type="checkbox" id="graychb" value="">
        </div>
        <div class = "invisible"></div>
        <div class = "colorContainer">
          <div class = "div-col-black"> </div>
          <input type="checkbox" id="blackchb" value="">
        </div>
        <div class = "invisible"></div>
        <div class = "colorContainer">
          <div class = "div-col-yellow"> </div>
          <input type="checkbox" id="yellowchb" value="">
        </div>
        <div class = "invisible"></div>
        <div class = "colorContainer">
          <div class = "div-col-orange"> </div>
          <input type="checkbox" id="orangechb" value="">
        </div>
      </div-->

      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" onclick="changeModalWindow('myModal2','myModal1')" data-dismiss="modal" id="btnAtrasModal2">Atrás</button>
        <button type="button" class="btn btn-primary" data-toggle= "modal" id="btnSiguienteModal2" onclick="changeModalWindow('myModal2','myModal3')" data-target="#myModal3">Siguiente</button>
      </div>
    </div>
  </div>
</div>

<!-- Ventana modal 3 Subida de archivos -->
<div id="myModal3" class="modal" data-backdrop="static" data-keyboard="false">
  <div class="modal-dialog">
    <div class="container">
      <% flash.each do |key, value| %>
        <div class="alert alert-<%= key %>"><%= value %></div>
      <% end %>
      <%= yield %>
    </div>
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" id="btnCloseModal3" aria-hidden="true">&times;</button>
        <h4 class="modal-title">Paso 3/3: Importar archivos</h4>
      </div>
      <div class="modal-body">
        <h4 class=>Seleccionar archivo</h4> 
        
        <h2>Import Products</h2>
          <%= form_tag import_static_pages_path, multipart: true, :remote => true do %>
            <%= file_field_tag :file %>
            <%= submit_tag "Import",:id => "importfile" %>
          <% end %>
      </div>
      <h1 id='notificador3' style='float:left;margin-left:20px;color:green !important;font-size:14px !important;display:none !important'></h1>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal" onclick="changeModalWindow('myModal3','myModal2')" id="btnAtrasModal3">Atrás</button>
        <!--button type="button" class="btn btn-primary" data-toggle= "modal" id="btnSiguienteModal3" data-target="#myModal2">Guardar</button-->
        <%= link_to "Guardar", 'static_pages/maps' , class: 'btn btn-primary', method: :get, remote: true, :id => "btnSiguienteModal3" %>
      </div>
    </div>
  </div>
</div>
</div>



<div id = "map" class "form-control" >
</div>
<p id = "parag" display = "none"></p>

<button type="button" class="btn btn-default" onclick="switchTypeMap()">Cambiar vista</button>
<div id="chart_div"></div>


<!--script src="https://maps.googleapis.com/maps/api/js?libraries=places&key=AIzaSyCb6BksSvuIGMLgJiP3PDT68LFEu6VVuwA" async defer></script-->
<!--script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCb6BksSvuIGMLgJiP3PDT68LFEu6VVuwA&libraries=places&sensor=false" async defer></script-->

<script>

//Funcionalidades de la api de google maps
  var map;
  var direccion = "";
  var mapOptions;
  var marcadores = [];
  
  /* Iniciar mapa */
  function initMap() {
    mapOptions = {
      center: new google.maps.LatLng(25.80, -80.30),
      zoom: 12,
      mapTypeId: google.maps.MapTypeId.HYBRID
    };
    map = new google.maps.Map(document.getElementById("map"), mapOptions);  
    //registrarAutocompletarInput(document.getElementById('filtropaises'));
    autocomplete = new google.maps.places.Autocomplete(
      /** @type {HTMLInputElement} */
      (document.getElementById('pais')), {
        types: ['geocode']
      });
  }
  /* Localizar país */
  function centerMap(direccion){
    if (direccion != ""){
      var geocoder = new google.maps.Geocoder();
      geocoder.geocode( {'address' : direccion}, function(results, status) {
          if (status == google.maps.GeocoderStatus.OK) {
              map.setCenter(results[0].geometry.location);
              map.setZoom(6);
          }
      });
    }
    else{
      alert("¡Tienes que indicar un país!");
    }
  }
  //window.onload = initMap;

  function switchTypeMap(){
  //var map = new google.maps.Map(document.getElementById("map"), mapOptions);
    if(map.getMapTypeId() == 'hybrid'){
      map.setMapTypeId(google.maps.MapTypeId.ROADMAP);
    }
    else{
      map.setMapTypeId(google.maps.MapTypeId.HYBRID);
    }
  }

  //Cambia o elige el tipo de mapa a renderizar
  function changeType(mapType){
    if(mapType == 'hybrid'){
      map.setMapTypeId(google.maps.MapTypeId.HYBRID);
    }else if(mapType == 'terrain'){
      map.setMapTypeId(google.maps.MapTypeId.TERRAIN);
    }else if(mapType == 'satellite'){
      map.setMapTypeId(google.maps.MapTypeId.SATELLITE);
    }
  }

  function registrarAutocompletarInput(input){
    map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
    var autocomplete = new google.maps.places.Autocomplete(input);
    autocomplete.setBounds(map.getBounds());
  }



  function agregarDatoAMapa(lugar,grafico){
    console.log('agregando dato ' + lugar + ' a mapa');

    var geocoder = new google.maps.Geocoder();
    geocoder.geocode( {'address' : lugar}, function(results, status) {
        if (status == google.maps.GeocoderStatus.OK) {
            console.log('se localizo ' + lugar);

            var marker = new google.maps.Marker({
              position: results[0].geometry.location,
              map: map,
              title: lugar
            });


            
            var infowindow = new google.maps.InfoWindow({
              content: grafico
            });

            marker.addListener('click', function(){
                infowindow.open(map, marker);
            });

            marcadores.push(marker);

        }else{
          console.log('no se pudo geolocalizar ' + lugar + ', status ' + status);
        }
    });
  }

  function eliminarMarcadores(){
    for(var i = 0;i < marcadores.length;i++){
      marcadores[i].map = null;
    }
    marcadores = [];
  }


//Funcionalidades del documento
  $(function()
  {

    //resetCookies()
    console.log('map configuration started');
    //Se le asignan las funcionalidades a las ventanas modales
    modal1();
    modal2();
    modal3();
  });

  //------------ventana modal 1--------------
  function modal1(){
    //cuando se escoge el tipo de mapa se guarda en las cookies
    $('#rb_satellite').click(function(){
      eliminarCookie('mapa_tipo');
      crearCookie('mapa_tipo', 'satellite',1);
    });
    $('#rb_hybrid').click(function(){
      eliminarCookie('mapa_tipo');
      crearCookie('mapa_tipo', 'hybrid',1); 
    });
    $('#rb_terrain').click(function(){
      eliminarCookie('mapa_tipo');
      crearCookie('mapa_tipo', 'terrain',1);
    });

    //selecciona por defecto el tipo de mapa híbrido
    $('#rb_hybrid').prop("checked", true);

    $('#btnSiguienteModal1').click(
        function(e){
          eliminarCookie('mapa_direccion');
          crearCookie('mapa_direccion', $('#pais').val(),1);
          console.log('cookies ' + document.cookie);
          if($('#pais').val() != null && $('#pais').val() != "")
            changeModalWindow('myModal1','myModal2')
          else{
             notificarModal1('Por favor, selecciona una localidad.');
             //alert('Por favor, selecciona una localidad.');
             e.stopPropagation();
          }
        }
    );

  }

  //------------ventana modal 2 ---------------
  function modal2(){
    
  }

  //------------ventana modal 3 ---------------
  function modal3(){
    var fileInput = document.getElementById('file');
    fileInput.accept=".csv,.xls,.xlsx,.xml";

    var importButton = document.getElementById('importfile');
    importButton.disabled = true;

    fileInput.onchange = function() {
        if(fileInput.value != null){
          importButton.disabled = false;
        }else{
          importButton.disabled = true;
        }
    }

    //se cierran las ventans modales una vez guardadas las configuraciones del mapa
    $('#btnSiguienteModal3').click(
        function(){
          //centerMap(obtenerCookie('mapa_direccion'));
          eliminarMarcadores();

          centerMap(obtenerCookie('mapa_direccion'));
          changeType(obtenerCookie('mapa_tipo'));
          crearCookie('file_name',$('#file').val().split('\\').pop(),1);
          crearCookie('titulo_grafico',$('#titulo_grafico').val(),1);
          crearCookie('tipo_grafico',$('#tipo_grafico').val(),1);
          console.log('cookies ' + document.cookie);
          $.ajax({
              type: "GET",
              dataType: "js",
              url: "static_pages/maps",
              success: function(data){}
          }); 
          $('.modal').modal('hide');
        }
    );
  }

  function notificarModal1(text)
  {
    $("#notificador1").attr('class','color: red !important;');
    $("#notificador1").html(text);
    $("#notificador1").show();
    setTimeout('$("#notificador1").hide()',5000);
  }

  function notificarModal2(text)
  {
    $("#notificador2").html(text);
    $("#notificador2").show('slow');
    setTimeout('$("#notificador1").hide("slow")',5000);
  }


  function notificarModal3(text)
  {
    $("#notificador3").html(text);
    $("#notificador3").show();
    setTimeout('$("#notificador3").hide()',5000);
  }

  


//funciones auxiliares para el manejo de las Cookies
  function crearCookie(name,value,days) {
    if (days) {
        var date = new Date();
        date.setTime(date.getTime()+(days*24*60*60*1000));
        var expires = "; expires="+date.toGMTString();
    }
    else var expires = "";
    document.cookie = name+"="+value+expires+"; path=/";
  }

  function obtenerCookie(name) {
    var nameEQ = name + "=";
    var ca = document.cookie.split(';');
    for(var i=0;i < ca.length;i++) {
        var c = ca[i];
        while (c.charAt(0)==' ') c = c.substring(1,c.length);
        if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);
    }
    return null;
  }

  function eliminarCookie(name) {
    crearCookie(name,"",-1);
  }

  function resetCookies(){
    document.cookie.split(";").forEach(function(c) { document.cookie = c.replace(/^ +/, "").replace(/=.*/, "=;expires=" + new Date().toUTCString() + ";path=/"); });
  } 

</script>


<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDFYS_LlvOWkFpSTfj7xbqW7WvK05KMFMQ&libraries=places&callback=initMap" async defer></script>


<!--Api de google chart-->
  <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
  <script type="text/javascript">

    // Load the Visualization API and the corechart package.
    google.charts.load('current', {'packages':['corechart']});

    // Set a callback to run when the Google Visualization API is loaded.
    //google.charts.setOnLoadCallback(drawChart);

    // Callback that creates and populates a data table,
    // instantiates the pie chart, passes in the data and
    // draws it.
    function getChart(datos) {

      var nodo =  document.createElement("div");

      var tipoGrafico = obtenerCookie('tipo_grafico');
      var tit = obtenerCookie('titulo_grafico');

      // Create the data table.
      var data = new google.visualization.DataTable();
      data.addColumn('string', 'Topping');
      data.addColumn('number', 'valor');
      data.addRows(datos);


      
      

      // Set chart options
      var options = {'title': tit,
                     'width':400,
                     'height':300
                   };


      /*<option value="column">Gráfico de columnas</option>
      <option value="bar">Gáfico de barras</option>
      <option value="circular">Gráfico circular</option>
      <option value="anillos">Gráfico de anillos</option>
      <option value="burbujas">Gráfico de burbujas</option>
      <option value="cajas">Gráfico de cajas</option>
      <option value="compuesto">Gráfico compuesto</option>
      <option value="histograma">Histograma</option>*/

      // Instantiate and draw our chart, passing in some options.

      var chart;
      if(tipoGrafico == 'circular'){
        chart = new google.visualization.PieChart(nodo);
      }else if(tipoGrafico == 'bar'){
        chart = new google.visualization.BarChart(nodo);
      }else if(tipoGrafico == 'anillos'){
        options = {'title': tit,
                     'width':400,
                     'height':300,
                     pieHole: 0.4
                   };
        chart = new google.visualization.PieChart(nodo);
      }else if(tipoGrafico == 'burbujas'){
        chart = new google.visualization.BarChart(nodo);
      }else if(tipoGrafico == 'cajas'){
        chart = new google.visualization.BarChart(nodo);
      }else if(tipoGrafico == 'compuesto'){
        chart = new google.visualization.BarChart(nodo);
      }else if(tipoGrafico == 'histogram'){
        chart = new google.visualization.ColumnChart(nodo);
      }else{
        chart = new google.visualization.ColumnChart(nodo);
      }
      chart.draw(data, options);

      return nodo;
    }
  </script>
<!-- <body onload="initMap()">
  <div id="map"></div>

  <div class="input-group">
    <input type="text" class="form-control" placeholder="País o Ciudad" aria-describedby="basic-addon1" id="pais">
    <button class="btn btn-danger" onclick="centerMap(document.getElementById('pais').value)">Ir!!</button>
  </div>

</body> -->